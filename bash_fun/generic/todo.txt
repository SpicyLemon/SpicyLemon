TODO:
    indiff <range1> <range2> <file>
        <range1> and <range2> have the format "<start line number>-<end line number>".
        This will extract the range1 and range2 content from <file> and run a diff on it.
        Basically, use getlines to extract the chunks to temp files and diff the temp files, then delete them.
        It'd also be pretty cool if it opened the file in something and let me select the start/end lines.
            Maybe something like `nl <file> | fzf` and then extract the selected line numbers.
        It'd be pretty awesome if it could be a vim plugin too. Somehow select the two sections to diff, then open a new window with the diff.
    Add recursive functionality to list.sh.
        Will need to keep track of directories seen (using pwd -P) to prevent infinite loops.
    Create a thing that takes in a URL and gets info about it including where it might redirect to.
        Give it recursive ability so that it can keep on following the trail, getting info as it goes.
    Do some sub-categorization of this stuff.
        The color stuff could be in one.
            Stuff like echo_color.sh, palette_generators.sh, show_palette.sh, and probably hrr.sh too.
        The sdkman_fzf.sh wrapper might be better placed one directory up.
        The math stuff could be grouped up: add.sh, multiply.sh, min.sh, max.sh
        Maybe some string manipulation stuff too, e.g. string_repeate.sh and change_word.sh.
        The hrr.sh file should probably be split out into individual files too. I don't know though, they're pretty simple, but who knows.
            That'd let some of the more palette oriented functions go into the color stuff too.
    Allow the vector length to be provided to palette_vector_generate and palette_vector_random.
    Create a palette_walk_generate and palette_walk_random
        Usage: palette_walk_generate <start> <step1> [<step2> ...]
        Each <step> would have the format "<dx>,<dy>,<dz>".
            It's either that or have each step actually be 3 arguments, but that seems like it'd get hard to keep track of.
        Any number of steps can be given.
        Usage: palette_walk_random [<start>] [<step1> [<step2> ...]] [<number of steps to add>]
        <start> can be '' to be randomly selected.
        Since steps have a specific format, its easy to know when they've ended, and the thing after it will be the number of steps to add.
        If no <number of steps to add> is given, (or it's '') a random value will be picked.
